name: Deploy DEADLINE to Railway and Vercel

on:
    push:
        branches:
            - main
            - develop
    pull_request:
        branches:
            - main

env:
    NODE_VERSION: "18"
    PYTHON_VERSION: "3.12"

jobs:
    # ============================================
    # Test Backend
    # ============================================
    test-backend:
        name: Test Django Backend
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: ./capstone-server

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version: ${{ env.PYTHON_VERSION }}
                  cache: "pip"

            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install -r requirements.txt

            - name: Check Django configuration
              env:
                  SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
                  DEBUG: "True"
                  ALLOWED_HOSTS: "localhost,127.0.0.1"
                  DEMO_MODE: "True"
              run: |
                  python manage.py check

            - name: Run migrations (dry run)
              env:
                  SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
                  DEBUG: "True"
              run: |
                  python manage.py migrate --check

            - name: Run tests
              env:
                  SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
                  DEBUG: "True"
              run: |
                  python manage.py test

    # ============================================
    # Test Frontend
    # ============================================
    test-frontend:
        name: Test Next.js Frontend
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: ./capstone-client

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  cache: "npm"
                  cache-dependency-path: capstone-client/package-lock.json

            - name: Install dependencies
              run: npm ci

            - name: Run linter
              run: npm run lint

            - name: Run type check
              run: npm run typecheck

            - name: Build production
              env:
                  NEXT_PUBLIC_API_BASE_URL: "https://placeholder.railway.app/api/v1"
                  NEXT_PUBLIC_FIREBASE_API_KEY: "placeholder"
                  NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: "placeholder.firebaseapp.com"
                  NEXT_PUBLIC_FIREBASE_PROJECT_ID: "placeholder"
                  NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: "placeholder.appspot.com"
                  NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: "123456789012"
                  NEXT_PUBLIC_FIREBASE_APP_ID: "1:123456789012:web:placeholder"
              run: npm run build

    # ============================================
    # Deploy Backend to Railway
    # ============================================
    deploy-backend:
        name: Deploy Backend to Railway
        runs-on: ubuntu-latest
        needs: [test-backend]
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Install Railway CLI
              run: npm install -g @railway/cli

            - name: Deploy to Railway
              env:
                  RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
              run: |
                  cd capstone-server
                  railway up --service backend

            - name: Get Railway URL
              id: railway_url
              env:
                  RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
              run: |
                  cd capstone-server
                  RAILWAY_URL=$(railway status --json | jq -r '.services[0].url')
                  echo "url=$RAILWAY_URL" >> $GITHUB_OUTPUT
                  echo "Railway URL: $RAILWAY_URL"

            - name: Health check
              run: |
                  sleep 10
                  curl -f ${{ steps.railway_url.outputs.url }}/api/v1/schema/ || exit 1

    # ============================================
    # Deploy Frontend to Vercel
    # ============================================
    deploy-frontend:
        name: Deploy Frontend to Vercel
        runs-on: ubuntu-latest
        needs: [test-frontend, deploy-backend]
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.NODE_VERSION }}

            - name: Install Vercel CLI
              run: npm install -g vercel

            - name: Deploy to Vercel
              env:
                  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
                  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
                  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
              run: |
                  cd capstone-client
                  if [ "${{ github.ref }}" == "refs/heads/main" ]; then
                    vercel --prod --token=$VERCEL_TOKEN --yes
                  else
                    vercel --token=$VERCEL_TOKEN --yes
                  fi

            - name: Get Vercel URL
              id: vercel_url
              env:
                  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
              run: |
                  cd capstone-client
                  VERCEL_URL=$(vercel inspect --token=$VERCEL_TOKEN | grep -oP 'https://[^\s]+')
                  echo "url=$VERCEL_URL" >> $GITHUB_OUTPUT
                  echo "Vercel URL: $VERCEL_URL"

            - name: Comment PR with deployment URLs
              if: github.event_name == 'pull_request'
              uses: actions/github-script@v7
              with:
                  script: |
                      github.rest.issues.createComment({
                        issue_number: context.issue.number,
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        body: `## üöÄ Deployment Preview

                        **Frontend**: ${{ steps.vercel_url.outputs.url }}
                        **Backend**: Check Railway dashboard

                        ‚úÖ All checks passed`
                      })

    # ============================================
    # Notify on Success/Failure
    # ============================================
    notify:
        name: Notify Deployment Status
        runs-on: ubuntu-latest
        needs: [deploy-backend, deploy-frontend]
        if: always()

        steps:
            - name: Deployment Success
              if: success()
              run: |
                  echo "‚úÖ Deployment successful!"
                  echo "Backend deployed to Railway"
                  echo "Frontend deployed to Vercel"

            - name: Deployment Failed
              if: failure()
              run: |
                  echo "‚ùå Deployment failed!"
                  echo "Check logs for details"
                  exit 1
